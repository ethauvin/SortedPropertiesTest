/*
* build.gradle
*
* Copyright (c) 2018, Erik C. Thauvin (erik@thauvin.net)
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*
*   Redistributions of source code must retain the above copyright notice, this
*   list of conditions and the following disclaimer.
*
*   Redistributions in binary form must reproduce the above copyright notice,
*   this list of conditions and the following disclaimer in the documentation
*   and/or other materials provided with the distribution.
*
*   Neither the name of this project nor the names of its contributors may be
*   used to endorse or promote products derived from this software without
*   specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
* FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
* DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
* SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
* CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
* OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
* OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

class TestPlugin implements Plugin<Project> {
    void apply(Project project) {
        project.task('runPlugin') {
            group = 'application'
            def p = new SortedProperties()
            p.put("apple", "one")
            p.put("beta", "two")
            p.put("coffee", "three")
            def f = new File("test.properties")
            f.withOutputStream { stream -> p.store(stream, "Generated by the plugin.") }
            doLast {
                println "> cat ${f.name}"
                f.eachLine {
                    println it
                }
            }
        }
    }
}

class SortedProperties extends Properties {
    @Override
    Enumeration<Object> keys() {
        def keys = Collections.list(super.keys())
        keys.sort { a, b -> (a.toString() <=> b.toString()) }
        return Collections.enumeration(keys)
    }
}

apply plugin: TestPlugin
apply plugin: 'groovy'
apply plugin: 'application'

mainClassName = 'com.example.App'

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.14'
}

repositories {
    jcenter()
}

clean {
    delete fileTree(dir: "$projectDir", include: "*.properties")
}
